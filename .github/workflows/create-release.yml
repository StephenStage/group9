name: Package and Upload Project

on:
  workflow_run:
    workflows: ["Java CI with Maven"]
    types:
      - completed

permissions:
  contents: write

jobs:
  package:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}

    steps:

      - uses: actions/checkout@v4


      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

  
      - name: Package Application
        run: mvn -B clean package


  
      - name: Extract Version from pom.xml
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | grep -Ev '(^\[|Download\w+:)')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

  
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          release_name: "Release v${{ env.VERSION }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

 
      - name: Find JAR File
        id: find_jar
        run: |
          JAR_PATH=$(find target -name "*.jar" | head -n 1)
          echo "Found JAR at: $JAR_PATH"
          echo "JAR_PATH=$JAR_PATH" >> $GITHUB_ENV

 
      - name: Upload Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.JAR_PATH }}
          asset_name: d2l-mock-${{ env.VERSION }}.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
