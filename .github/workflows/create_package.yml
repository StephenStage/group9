name: Package Java Project

on:
  workflow_run:
    workflows: ["Java CI with Maven"]
    types:
      - completed

jobs:
  package:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Package Application
        run: mvn -B clean package

      - name: Extract Version from pom.xml
        id: extract_version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      # Create a GitHub Release using the extracted version
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"  # Use the extracted version for the tag
          release_name: "Release v${{ env.VERSION }}"  # Name the release based on the version
          draft: false
          prerelease: false

      # Upload the packaged JAR or WAR to the release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/*.jar  # Adjust this to match your packaged file (e.g., JAR or WAR)
          asset_name: d2l-mock-${{ env.VERSION }}.jar  # Name the asset based on the version
          asset_content_type: application/java-archive